{"version":3,"sources":["serviceWorker.js","engine/clock.js","engine/resources/resource.js","components/ResourceCount.js","engine/savegame.js","components/AutoSaveComponent.js","engine/resources/recipe.js","components/BuyButton.js","components/BuyResourcePane.js","containers/GameContainer.js","components/MainMenu.js","containers/AppContainer.js","index.js"],"names":["Boolean","window","location","hostname","match","clock","interval","pipe","multicast","BehaviorSubject","connect","ResourceConfig","name","initialCount","initialRate","this","Resource","config","count","rate","subscribe","next","amnts","updateCount","updateRate","amnt","RESOURCES","reduce","acc","ResourceCount","resource","useState","setCount","setRate","useEffect","subscription","x","Math","floor","unsubscribe","saveValid","parsed","JSON","parse","localStorage","getItem","Object","entries","data","undefined","AutoSaveComponent","saveInterval","subsciption","setItem","stringify","saveGame","Recipe","price","result","type","isAffordable","forEach","update","RECIPES","c","a","b","recipe","BuyButton","className","onClick","buy","map","k","v","key","BuyResourcePane","recipes","r","GameContainer","render","keys","React","Component","MainMenu","setInGame","loadGame","AppContainer","inGame","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f54ed496.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'},\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import {interval, BehaviorSubject} from 'rxjs';\r\nimport {multicast} from 'rxjs/operators';\r\n\r\nconst TICK_RATE = 30;\r\nconst TICK_LENGTH = 1000 / TICK_RATE;\r\n\r\nconst clock = interval(TICK_LENGTH).pipe(multicast(new BehaviorSubject()))\r\nclock.connect();\r\nexport {clock, TICK_LENGTH};\r\n","import { clock, TICK_LENGTH } from \"../clock\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\n\r\nclass ResourceConfig {\r\n    constructor(name, initialCount, initialRate, ) {\r\n        this.name = name;\r\n        this.initialCount = initialCount || 0;\r\n        this.initialRate = initialRate || 0;\r\n    }\r\n}\r\n\r\nclass Resource extends BehaviorSubject {\r\n    constructor(config) {\r\n        super(null); //TODO is this a problem if we dont send an update before subscriptions come in? composition instead mayhaps\r\n        this.config = config;\r\n        this.count = config.initialCount;\r\n        this.rate = config.initialRate\r\n\r\n        clock.subscribe(() => {\r\n            this.count += TICK_LENGTH * this.rate / 1000.0;\r\n            this.next(this)\r\n        })\r\n    }\r\n\r\n    update(amnts) {\r\n        if (!amnts) {\r\n            return false;\r\n        }\r\n        this.updateCount(amnts.count);\r\n        this.updateRate(amnts.rate);\r\n    }\r\n\r\n    updateCount(amnt) {\r\n        if (!amnt) {\r\n            return false;\r\n        }\r\n        this.count += amnt;\r\n        this.next(this);\r\n    }\r\n\r\n    updateRate(amnt) {\r\n        if (!amnt) {\r\n            return false;\r\n        }\r\n        this.rate += amnt;\r\n        this.next(this);\r\n    }\r\n}\r\n\r\nconst configArray = [\r\n    new ResourceConfig('a'),\r\n    new ResourceConfig('b'),\r\n    new ResourceConfig('c', 2),\r\n]\r\n\r\nexport const RESOURCES = configArray.reduce(\r\n    (acc, config) => {\r\n        acc[config.name] = new Resource(config);\r\n        return acc;\r\n    }, {})\r\n","import React, { useEffect, useState } from 'react';\r\nimport { RESOURCES } from \"../engine/resources/resource\";\r\n\r\nfunction ResourceCount({resource}) {\r\n    let [count, setCount] = useState(0);\r\n    let [rate, setRate] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const subscription = RESOURCES[resource].subscribe(x => {\r\n            setCount(Math.floor(x.count));\r\n            setRate(Math.floor(x.rate));\r\n        });\r\n        return () => {\r\n            subscription.unsubscribe()\r\n        }\r\n    }, [resource])\r\n\r\n    // useEffect(() =>\r\n    //     console.log(\"render \" + resource)\r\n    // )\r\n\r\n    return (\r\n        <div>\r\n            <p>\r\n                {resource}: {count} ({rate}/s)\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResourceCount;\r\n","import {RESOURCES} from \"./resources/resource\";\r\n\r\nconst SAVE_KEY = \"saved-game\";\r\n\r\nfunction saveGame() {\r\n    const data = Object.entries(RESOURCES).reduce((acc, [name, resource]) => {\r\n        acc[name] = {count: resource.count, rate: resource.rate};\r\n        return acc;\r\n    }, {})\r\n    localStorage.setItem(SAVE_KEY, JSON.stringify(data));\r\n}\r\n\r\n// Assumes a valid save\r\nfunction loadGame() {\r\n    const parsed = JSON.parse(localStorage.getItem(SAVE_KEY));\r\n    Object.entries(parsed).forEach(([name, data]) => {\r\n        RESOURCES[name].count = data.count;\r\n        RESOURCES[name].rate = data.rate;\r\n    })\r\n}\r\n\r\nfunction saveValid() {\r\n    const parsed = JSON.parse(localStorage.getItem(SAVE_KEY));\r\n    return !!parsed && Object.entries(parsed).reduce((acc, [name, data]) => {\r\n        return !!(acc && RESOURCES[name] && data && data.count !== undefined && data.rate !== undefined);\r\n    }, true);\r\n}\r\n\r\nexport { saveGame, loadGame, saveValid };\r\n","import { useEffect } from \"react\";\r\nimport { interval } from \"rxjs\";\r\nimport { saveGame } from \"../engine/savegame\";\r\n\r\nfunction AutoSaveComponent({saveInterval}) {\r\n    useEffect(() => {\r\n        const subsciption = interval(1000*saveInterval).subscribe(\r\n            () => saveGame()\r\n        );\r\n\r\n        return () => subsciption.unsubscribe();\r\n    }, [saveInterval])\r\n\r\n    return null;\r\n}\r\n\r\nexport default AutoSaveComponent;\r\n","import {RESOURCES} from \"./resource\";\r\n\r\nclass Recipe {\r\n    constructor(name, price, result) {\r\n        this.name = name;\r\n        this.price = price;\r\n        this.result = result;\r\n    }\r\n\r\n    isAffordable() {\r\n        return Object.entries(this.price).reduce(\r\n            (acc, [type, amnt]) => acc && amnt <= RESOURCES[type].count,\r\n            true\r\n        );\r\n    }\r\n\r\n    buy() {\r\n        if (!this.isAffordable()) {\r\n            return false;\r\n        }\r\n\r\n        Object.entries(this.price).forEach(([type, amnt]) => RESOURCES[type].updateCount(-amnt));\r\n        Object.entries(this.result).forEach(([type, result]) => RESOURCES[type].update(result));\r\n    }\r\n}\r\n\r\nconst recipeArray = [\r\n    new Recipe(\"a++\", {c:2}, {a:{rate:1}}),\r\n    new Recipe(\"b++\", {c:10}, {b:{rate:1}}),\r\n    new Recipe(\"click\", {}, {b:{count:1}}),\r\n    new Recipe(\"convert\", {a:5, b:5}, {c:{count:1}}),\r\n];\r\n\r\nexport const RECIPES = recipeArray.reduce((acc, recipe) => {\r\n    acc[recipe.name] = recipe;\r\n    return acc;\r\n},{});","import React from \"react\";\r\nimport {RECIPES} from \"../engine/resources/recipe\";\r\n\r\nfunction BuyButton({recipe}) {\r\n\r\n    return (\r\n        <div className=\"row mb-4\">\r\n            <div className=\"col-3\">\r\n                <button className=\"btn btn-primary btn-block\"\r\n                        onClick={() => RECIPES[recipe].buy()}>\r\n                    {recipe}\r\n                </button>\r\n            </div>\r\n            <div className=\"col-auto\">\r\n                Costs:\r\n                {\r\n                    Object.entries(RECIPES[recipe].price)\r\n                        .map(([k,v]) =>\r\n                            <div key={`${recipe}_entries_${k}`}>\r\n                                {`${k}: ${v}`}\r\n                            </div>\r\n                        )\r\n                }\r\n            </div>\r\n            <div className=\"col-auto\">\r\n                Produces:\r\n                {\r\n                    Object.entries(RECIPES[recipe].result)\r\n                        .map(([k,v]) =>\r\n                            <div key={`${recipe}_results_${k}`}>\r\n                                {k}:\r\n                                <br/>\r\n                                {\r\n                                    Object.entries(v)\r\n                                        .map(([k,v]) => `${k}: ${v}`)\r\n                                }\r\n                            </div>\r\n                        )\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BuyButton;\r\n","import React from \"react\";\nimport BuyButton from \"./BuyButton\";\n\nfunction BuyResourcePane({recipes}) {\n    return(\n        <div className='row'>\n            <div className='container-fluid p-0'>\n                {\n                    recipes.map(r => <BuyButton recipe={r} key={r}/>)\n                }\n            </div>\n\n        </div>\n    )\n}\n\nexport default BuyResourcePane;\n","import ResourceCount from \"../components/ResourceCount\";\r\nimport AutoSaveComponent from \"../components/AutoSaveComponent\";\r\nimport React from \"react\";\r\nimport BuyResourcePane from \"../components/BuyResourcePane\";\r\nimport {RECIPES} from \"../engine/resources/recipe\";\r\n\r\n\r\nclass GameContainer extends React.Component {\r\n    render = () => {\r\n        return (\r\n            <div className=\"container game-container\">\r\n                <AutoSaveComponent saveInterval={5}/>\r\n                <div className=\"row\">\r\n                    <ResourceCount resource='a'/>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <ResourceCount resource='b'/>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <ResourceCount resource='c'/>\r\n                </div>\r\n                <BuyResourcePane recipes={Object.keys(RECIPES)}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GameContainer;\r\n","import React from \"react\";\r\nimport {loadGame, saveValid} from \"../engine/savegame\";\r\n\r\nfunction MainMenu({setInGame}) {\r\n    return (\r\n        <div className='main-menu'>\r\n            <button className=\"btn btn-primary\"\r\n                    onClick={() => setInGame(true)}>New Game</button>\r\n            <button className={`btn btn-primary${ saveValid() ? \"\" : \" d-none\"}`}\r\n                    onClick={() => {loadGame(); setInGame(true);}}>Continue</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainMenu;\r\n","import React, { useState }  from \"react\";\nimport './AppContainer.css';\nimport GameContainer from \"./GameContainer\";\nimport MainMenu from \"../components/MainMenu\";\n\nfunction AppContainer() {\n    let [inGame, setInGame] = useState(false);\n\n    return (\n        <div className=\"bg-dark vh-100\">\n            <div className=\"container text-light\">\n                <div className=\"row pt-3\">\n                    <h1>Untitled Incremental Game</h1>\n                </div>\n                {inGame ? <GameContainer/> : <MainMenu setInGame={setInGame}/> }\n            </div>\n        </div>\n    );\n}\n\nexport default AppContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport AppContainer from \"./containers/AppContainer\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <AppContainer/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}