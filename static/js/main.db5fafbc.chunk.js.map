{"version":3,"sources":["serviceWorker.js","engine/clock.js","engine/concrete/resource.js","engine/abstract/generator.js","ui/components/GeneratorView.js","ui/components/ResourceView.js","engine/savegame.js","ui/contexts.js","ui/components/AutoSaveComponent.js","engine/concrete/recipe.js","engine/abstract/buyable.js","ui/components/BuyButton.js","ui/components/BuyResourcePane.js","ui/containers/GameContainer.js","ui/components/MainMenu.js","ui/components/debug/DebugListItem.js","ui/components/debug/DebugList.js","ui/components/debug/DebugView.js","ui/components/debug/DebugProviderContext.js","utils.js","ui/containers/AppContainer.js","index.js"],"names":["Boolean","window","location","hostname","match","TICK_LENGTH","Math","floor","clock","interval","pipe","mapTo","publishBehavior","connect","ResourceGenerator","resource","initialRate","amount","this","updateCount","baseTime","initialUpgrades","upgrades","accumulated","emitter","BehaviorSubject","message","subscribe","ms","generated","generate","next","console","warn","times","rate","getRate","progress","Resource","name","initialCount","count","generator","serialize","amnts","updateRate","amnt","broadcast","upgrade","data","undefined","RESOURCES","reduce","acc","r","GeneratorView","showBar","useState","setProgress","setRate","useEffect","subscription","x","unsubscribe","className","role","style","width","transition","ResourceView","setCount","saveGameObserver","Subject","saveGameEvents","saveValid","parsed","JSON","parse","localStorage","getItem","Object","entries","deserializable","DebugContext","React","createContext","history","doLog","showLog","toggleLog","toggleShowLog","log","obj","clearLog","AutoSaveComponent","saveInterval","context","useContext","setItem","stringify","saveGame","Recipe","price","result","forEach","type","update","isAffordable","giveBuyResult","RECIPES","c","a","b","recipe","BuyButton","onClick","buy","map","k","v","key","BuyResourcePane","recipes","GameContainer","keys","MainMenu","setInGame","deserialize","loadGame","DebugListItem","timestamp","string","padEnd","DebugList","end","setEnd","scrollIntoView","behavior","entry","idx","ref","el","DebugView","subscriptions","recipeName","resourceName","resourceValue","logStr","s","concat","DebugContextProvider","inner","setDebugContext","prevState","date","hours","getHours","toString","slice","minutes","getMinutes","seconds","getSeconds","millis","getMilliseconds","getFormattedTime","Date","logString","String","length","shift","push","debugContext","debugKeypressHandler","event","addEventListener","removeEventListener","Provider","value","AppContainer","inGame","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.db5fafbc.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'},\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import {interval} from 'rxjs';\r\nimport {mapTo, publishBehavior} from 'rxjs/operators';\r\n\r\nconst TICK_RATE = 30;\r\nconst TICK_LENGTH = Math.floor(1000 / TICK_RATE);\r\n\r\nconst clock = interval(TICK_RATE).pipe(mapTo(TICK_LENGTH), publishBehavior(0))\r\nclock.connect();\r\nexport {clock};\r\n","import { BehaviorSubject } from \"rxjs\";\r\nimport Generator from \"../abstract/generator\";\r\n\r\nclass ResourceGenerator extends Generator {\r\n    constructor(resource, initialRate) {\r\n        super(1000, initialRate);\r\n        this.resource = resource;\r\n    }\r\n\r\n    generate(amount) {\r\n        this.resource.updateCount(amount)\r\n    }\r\n}\r\n\r\nclass Resource {\r\n    constructor(name, initialCount=0, initialRate=0) {\r\n        this.name = name;\r\n        this.count = initialCount;\r\n        this.generator = new ResourceGenerator(this, initialRate);\r\n\r\n        this.emitter = new BehaviorSubject({count:initialCount, rate:initialRate});\r\n    }\r\n\r\n    broadcast() {\r\n        this.emitter.next(this.serialize())\r\n    }\r\n\r\n    update(amnts) {\r\n        if (!amnts) {\r\n            return false;\r\n        }\r\n        this.updateCount(amnts.count);\r\n        this.updateRate(amnts.rate);\r\n    }\r\n\r\n    updateCount(amnt) {\r\n        if (!amnt) {\r\n            return false;\r\n        }\r\n        this.count += amnt;\r\n\r\n        this.broadcast();\r\n    }\r\n\r\n    updateRate(amnt) {\r\n        if (!amnt) {\r\n            return false;\r\n        }\r\n        this.generator.upgrade(amnt);\r\n\r\n        this.broadcast();\r\n    }\r\n\r\n    serialize() {\r\n        return {\r\n            count: this.count,\r\n            rate: this.generator.upgrades //this.generator.baseTime * this.generator.upgrades / 1000.0,\r\n        };\r\n    }\r\n\r\n    deserializable(data) {\r\n        return !!(data && data.count !== undefined && data.rate !== undefined);\r\n    }\r\n\r\n    deserialize(data) {\r\n        this.count = data.count;\r\n        this.generator.upgrades = data.rate;\r\n        this.broadcast();\r\n    }\r\n}\r\n\r\nconst resourceArray = [\r\n    new Resource('a'),\r\n    new Resource('b'),\r\n    new Resource('c', 2),\r\n]\r\n\r\nexport const RESOURCES = resourceArray.reduce(\r\n    (acc, r) => {\r\n        acc[r.name] = r;\r\n        return acc;\r\n    }, {})\r\n","import {clock} from \"../clock\";\r\nimport {BehaviorSubject} from \"rxjs\";\r\n\r\nclass Generator {\r\n    constructor(baseTime, initialUpgrades=0) {\r\n        this.baseTime = baseTime;\r\n        this.upgrades = initialUpgrades;\r\n        this.accumulated = 0;\r\n\r\n        this.emitter = new BehaviorSubject(this.message());\r\n\r\n        clock.subscribe((ms) => {\r\n            this.accumulated += ms * this.upgrades;\r\n            const generated = Math.floor(this.accumulated / this.baseTime);\r\n            this.accumulated = this.accumulated % this.baseTime;\r\n            if (generated) {\r\n                this.generate(generated)\r\n            }\r\n            this.emitter.next(this.message())\r\n        })\r\n    }\r\n\r\n    getRate() {\r\n        return this.baseTime * this.upgrades / 1000;\r\n    }\r\n\r\n    generate(amount) {\r\n        console.warn(\"Generator did not overwrite generate.\");\r\n    }\r\n\r\n    upgrade(times) {\r\n        this.upgrades += times;\r\n        this.emitter.next(this.message())\r\n    }\r\n\r\n    message() {\r\n        return {rate: this.getRate(), progress: this.accumulated / this.baseTime};\r\n    }\r\n}\r\n\r\nexport default Generator;\r\n","import React, {useEffect, useState} from \"react\";\r\n\r\nfunction GeneratorView({generator, showBar=false}) {\r\n\r\n    const [progress, setProgress] = useState(0);\r\n    const [rate, setRate] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const subscription = generator.emitter.subscribe(x => {\r\n            setProgress(x.progress);\r\n            setRate(x.rate);\r\n        });\r\n        return () => {\r\n            subscription.unsubscribe();\r\n        }\r\n    }, [generator])\r\n\r\n    return <div>\r\n        {showBar\r\n            ? <div className=\"progress\">\r\n                <div className=\"progress-bar\"\r\n                     role=\"progressbar\"\r\n                     style={{width: `${100 * progress}%`, transition:\"none\"}}\r\n                     // aria-valuenow={progress}\r\n                     // aria-valuemin=\"0\"\r\n                     // aria-valuemax=\"1\"\r\n                />\r\n            </div>\r\n            : null}\r\n        {rate}/s\r\n    </div>\r\n}\r\n\r\nexport default GeneratorView;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { RESOURCES } from \"../../engine/concrete/resource\";\r\nimport GeneratorView from \"./GeneratorView\";\r\n\r\nfunction ResourceView({resource}) {\r\n    let [count, setCount] = useState(0);\r\n    // let [rate, setRate] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const subscription = RESOURCES[resource].emitter.subscribe(x => {\r\n            setCount(Math.floor(x.count));\r\n            // setRate(Math.floor(x.rate));\r\n        });\r\n        return () => {\r\n            subscription.unsubscribe()\r\n        }\r\n    }, [resource])\r\n\r\n    // useEffect(() =>\r\n    //     console.log(\"render \" + resource)\r\n    // )\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {resource}: {count} <GeneratorView generator={RESOURCES[resource].generator} showBar={true}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResourceView;\r\n","import {RESOURCES} from \"./concrete/resource\";\r\nimport {Subject} from \"rxjs\";\r\n\r\nconst SAVE_KEY = \"saved-game\";\r\n\r\nconst saveGameObserver = new Subject();\r\nconst saveGameEvents = {\r\n    SAVE_GAME_EVENT: 'SAVE_GAME_EVENT',\r\n    LOAD_GAME_EVENT: 'LOAD_GAME_EVENT'\r\n};\r\n\r\nfunction saveGame() {\r\n    const data = Object.entries(RESOURCES).reduce((acc, [name, resource]) => {\r\n        acc[name] = resource.serialize();\r\n        return acc;\r\n    }, {})\r\n    localStorage.setItem(SAVE_KEY, JSON.stringify(data));\r\n    saveGameObserver.next('SAVE_GAME_EVENT')\r\n}\r\n\r\n// Assumes a valid save\r\nfunction loadGame() {\r\n    const parsed = JSON.parse(localStorage.getItem(SAVE_KEY));\r\n    Object.entries(parsed).forEach(([name, data]) => {\r\n        RESOURCES[name].deserialize(data);\r\n    })\r\n    saveGameObserver.next('LOAD_GAME_EVENT')\r\n}\r\n\r\nfunction saveValid() {\r\n    const parsed = JSON.parse(localStorage.getItem(SAVE_KEY));\r\n    return !!parsed && Object.entries(parsed).reduce((acc, [name, data]) => {\r\n        return !!(acc && RESOURCES[name] && RESOURCES[name].deserializable(data));\r\n    }, true);\r\n}\r\n\r\nexport { saveGame, loadGame, saveValid, saveGameObserver, saveGameEvents };\r\n","import React from \"react\"\r\n\r\nexport const DebugContext = React.createContext({\r\n    history: [],\r\n    doLog: false,\r\n    showLog: false,\r\n    toggleLog: () => {},\r\n    toggleShowLog: () => {},\r\n    log: (obj) => {},\r\n    clearLog: () => {}\r\n});\r\n","import {useContext, useEffect} from \"react\";\r\nimport { interval } from \"rxjs\";\r\nimport { saveGame } from \"../../engine/savegame\";\r\nimport {DebugContext} from \"../contexts\";\r\n\r\nfunction AutoSaveComponent({saveInterval}) {\r\n\r\n    let context = useContext(DebugContext);\r\n\r\n    useEffect(() => {\r\n        const subscription = interval(1000*saveInterval).subscribe(\r\n            () => {\r\n                saveGame()\r\n            }\r\n        );\r\n\r\n        return () => subscription.unsubscribe();\r\n    }, [context, saveInterval])\r\n\r\n    return null;\r\n}\r\n\r\nexport default AutoSaveComponent;\r\n","import {RESOURCES} from \"./resource\";\r\nimport Buyable from \"../abstract/buyable\";\r\nimport {Subject} from \"rxjs\";\r\n\r\nclass Recipe extends Buyable{\r\n    constructor(name, price, result) {\r\n        super(price)\r\n        this.name = name;\r\n        this.result = result;\r\n        this.emitter = new Subject();\r\n    }\r\n\r\n    giveBuyResult() {\r\n        Object.entries(this.result).forEach(([type, result]) => RESOURCES[type].update(result));\r\n        this.emitter.next({name: this.name, price: this.price, result: this.result})\r\n    }\r\n}\r\n\r\nconst recipeArray = [\r\n    new Recipe(\"a++\", {c:2}, {a:{rate:1}}),\r\n    new Recipe(\"b++\", {c:10}, {b:{rate:1}}),\r\n    new Recipe(\"click\", {}, {b:{count:1}}),\r\n    new Recipe(\"convert\", {a:5, b:5}, {c:{count:1}}),\r\n];\r\n\r\nexport const RECIPES = recipeArray.reduce((acc, recipe) => {\r\n    acc[recipe.name] = recipe;\r\n    return acc;\r\n},{});\r\n","import {RESOURCES} from \"../concrete/resource\";\r\n\r\nclass Buyable {\r\n    constructor(price) {\r\n        this.price = price;\r\n    }\r\n\r\n    isAffordable(amount=1) {\r\n        return Object.entries(this.price).reduce(\r\n            (acc, [type, amnt]) => acc && ((amnt * amount) <= RESOURCES[type].count),\r\n            true\r\n        );\r\n    }\r\n\r\n    buy(amount=1) {\r\n        if (!this.isAffordable(amount)) {\r\n            return false;\r\n        }\r\n\r\n        Object.entries(this.price).forEach(([type, amnt]) => RESOURCES[type].updateCount(-amnt * amount));\r\n        this.giveBuyResult(amount);\r\n    }\r\n\r\n    giveBuyResult(amount) {\r\n        console.warn(\"Buyable did not overwrite giveResult.\")\r\n    }\r\n}\r\n\r\nexport default Buyable;","import React from \"react\";\r\nimport {RECIPES} from \"../../engine/concrete/recipe\";\r\n\r\nfunction BuyButton({recipe}) {\r\n\r\n    return (\r\n        <div className=\"row mb-4\">\r\n            <div className=\"col-3\">\r\n                <button className=\"btn btn-primary btn-block\"\r\n                        onClick={() => {\r\n                            RECIPES[recipe].buy()\r\n                        }}>\r\n                    {recipe}\r\n                </button>\r\n            </div>\r\n            <div className=\"col-auto\">\r\n                Costs:\r\n                {\r\n                    Object.entries(RECIPES[recipe].price)\r\n                        .map(([k,v]) =>\r\n                            <div key={`${recipe}_entries_${k}`}>\r\n                                {`${v} ${k}`}\r\n                            </div>\r\n                        )\r\n                }\r\n            </div>\r\n            <div className=\"col-auto\">\r\n                Produces:\r\n                {\r\n                    Object.entries(RECIPES[recipe].result)\r\n                        .map(([resource,data]) =>\r\n                            <div key={`${recipe}_results_${resource}`}>\r\n                                {\r\n                                    Object.entries(data)\r\n                                        .map(([k,v]) => `${v} ${resource}${k === 'rate' ? '/s' : ''}`)\r\n                                }\r\n                            </div>\r\n                        )\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BuyButton;\r\n","import React from \"react\";\nimport BuyButton from \"./BuyButton\";\n\nfunction BuyResourcePane({recipes}) {\n    return(\n        <div className='row'>\n            <div className='container-fluid p-0'>\n                {\n                    recipes.map(r => <BuyButton recipe={r} key={r}/>)\n                }\n            </div>\n\n        </div>\n    )\n}\n\nexport default BuyResourcePane;\n","import ResourceView from \"../components/ResourceView\";\r\nimport AutoSaveComponent from \"../components/AutoSaveComponent\";\r\nimport React from \"react\";\r\nimport BuyResourcePane from \"../components/BuyResourcePane\";\r\nimport {RECIPES} from \"../../engine/concrete/recipe\";\r\n\r\nfunction GameContainer() {\r\n\r\n    return (\r\n        <div className=\"container game-container\">\r\n            <AutoSaveComponent saveInterval={5}/>\r\n            <div className=\"row\">\r\n                <ResourceView resource='a'/>\r\n            </div>\r\n            <div className=\"row\">\r\n                <ResourceView resource='b'/>\r\n            </div>\r\n            <div className=\"row\">\r\n                <ResourceView resource='c'/>\r\n            </div>\r\n            <BuyResourcePane recipes={Object.keys(RECIPES)}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameContainer;\r\n","import React from \"react\";\r\nimport {loadGame, saveValid} from \"../../engine/savegame\";\r\n\r\nfunction MainMenu({setInGame}) {\r\n    return (\r\n        <div className='main-menu'>\r\n            <button className=\"btn btn-primary\"\r\n                    onClick={() => setInGame(true)}>New Game</button>\r\n            <button className={`btn btn-primary${ saveValid() ? \"\" : \" d-none\"}`}\r\n                    onClick={() => {loadGame(); setInGame(true);}}>Continue</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainMenu;\r\n","import React from \"react\"\r\n\r\nfunction DebugListItem({timestamp, string}) {\r\n    return(\r\n        <div className=\"list-group-item list-group-item-action p-0 pl-1 text-monospace\">\r\n            <span className=\"text-muted mr-2 font-italic\">{timestamp.padEnd(12)}</span>\r\n            <span className=\"text-black\">{string}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DebugListItem\r\n","import React, {useEffect, useState} from \"react\"\r\nimport DebugListItem from \"./DebugListItem\";\r\n\r\nimport \"./DebugList.css\"\r\n\r\nfunction DebugList({history}) {\r\n\r\n    let [end, setEnd] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (end !== null) {\r\n            end.scrollIntoView({behavior: \"smooth\"})\r\n        }\r\n    }, [history, end]);\r\n\r\n    return(\r\n        <div className=\"list-group max-vh-20 overflow-auto\">\r\n            {\r\n                history.map((entry, idx) => {\r\n                    return <DebugListItem timestamp={entry[0]} string={entry[1]} key={idx}/>\r\n                })\r\n            }\r\n            <div ref={(el) => setEnd(el)}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DebugList;\r\n","import React, {useContext, useEffect} from \"react\"\r\nimport {DebugContext} from \"../../contexts\";\r\nimport DebugList from \"./DebugList\";\r\nimport {saveGameEvents, saveGameObserver} from \"../../../engine/savegame\";\r\nimport {RECIPES} from \"../../../engine/concrete/recipe\";\r\n\r\nfunction DebugView() {\r\n\r\n    let context = useContext(DebugContext);\r\n\r\n    useEffect(() => {\r\n        const subscription = saveGameObserver.subscribe(x => {\r\n            switch(x) {\r\n                case saveGameEvents.SAVE_GAME_EVENT:\r\n                    context.log('Game saved.');\r\n                    break;\r\n                case saveGameEvents.LOAD_GAME_EVENT:\r\n                    context.log('Game loaded.');\r\n                    break;\r\n                default:\r\n                    console.warn('got unhandled saveGameEvent');\r\n                    context.log(x)\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            subscription.unsubscribe()\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n       const subscriptions = Object.entries(RECIPES).map(([recipeName, recipeValue]) => {\r\n           return recipeValue.emitter.subscribe(x => {\r\n               let result = Object.entries(x.result).map(([resourceName, resourceValue]) => {\r\n                   return Object.entries(resourceValue).map(([k, v]) => {\r\n                       return `${v}${resourceName}${k === 'rate' ? '/s' : ''}`\r\n                   })\r\n               });\r\n\r\n               let logStr = `Bought ${recipeName}, received ${result}`;\r\n               context.log(logStr)\r\n           });\r\n       });\r\n\r\n       return () => {\r\n           subscriptions.map(s => s.unsubscribe())\r\n       }\r\n    });\r\n\r\n    return(\r\n        context.showLog &&\r\n            <div className=\"card text-dark\">\r\n                <div className=\"card-body\">\r\n                    <h6>Debug Me Daddy</h6>\r\n                    <DebugList history={context.history}/>\r\n                    <br/>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\">\r\n                            <button onClick={() => context.toggleLog()}\r\n                                    className={\"btn btn-block \".concat(context.doLog ? \"btn-success\" : \"btn-danger\")}>\r\n                                Log {context.doLog ? \"On\" : \"Off\"}</button>\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                            <button onClick={() => context.clearLog()}\r\n                                    className={\"btn btn-block btn-warning\"}>\r\n                                Clear Log</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default DebugView\r\n","import React from \"react\";\r\nimport {DebugContext} from \"../../contexts\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {getFormattedTime} from \"../../../utils\";\r\n\r\nfunction DebugContextProvider({inner}) {\r\n\r\n    let [debugContext, setDebugContext] = useState(\r\n        {\r\n            history: [],\r\n            doLog: true,\r\n            showLog: false,\r\n            toggleLog: () => {\r\n                setDebugContext(prevState => {\r\n                    return {...prevState, doLog: !prevState.doLog}\r\n                })\r\n            },\r\n            toggleShowLog: () => {\r\n                setDebugContext(prevState => {\r\n                    return {...prevState, showLog: !prevState.showLog}\r\n                })\r\n            },\r\n            log: (obj) => setDebugContext(prevState => {\r\n                if (prevState.doLog) {\r\n                    let timestamp = getFormattedTime(new Date());\r\n                    let logString = String(obj);\r\n\r\n                    if (prevState.history.length > 100) {\r\n                        prevState.history.shift()\r\n                    }\r\n                    prevState.history.push([timestamp, logString]);\r\n                }\r\n                return {...prevState, history: [...prevState.history]}\r\n            }),\r\n            clearLog: () => setDebugContext( prevState => {\r\n                return {...prevState, history: []}\r\n            })\r\n        }\r\n    );\r\n\r\n    useEffect(() => {\r\n        let debugKeypressHandler = (event) => {\r\n            if (event.key === 'd') {\r\n                debugContext.toggleShowLog()\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', debugKeypressHandler);\r\n        return () => window.removeEventListener('keydown', debugKeypressHandler)\r\n    }, [debugContext]);\r\n    \r\n    return <DebugContext.Provider value={debugContext}>\r\n        {inner}\r\n    </DebugContext.Provider>\r\n}\r\n\r\nexport default DebugContextProvider;\r\n","export const getFormattedTime = (date) => {\r\n    let hours = ('0' + date.getHours().toString()).slice(-2);\r\n    let minutes = ('0' + date.getMinutes().toString()).slice(-2);\r\n    let seconds = ('0' + date.getSeconds().toString()).slice(-2);\r\n    let millis = date.getMilliseconds().toString().padEnd(3, '0');\r\n\r\n    return `${hours}:${minutes}:${seconds}.${millis}`;\r\n};\r\n","import React, {useState} from \"react\";\r\nimport './AppContainer.css';\r\nimport GameContainer from \"./GameContainer\";\r\nimport MainMenu from \"../components/MainMenu\";\r\nimport DebugView from \"../components/debug/DebugView\";\r\nimport DebugContextProvider from \"../components/debug/DebugProviderContext\";\r\n\r\nfunction AppContainer() {\r\n    let [inGame, setInGame] = useState(false);\r\n\r\n    let inner = <div className=\"container text-light\">\r\n        <div className=\"row pt-3\">\r\n            <h1>Untitled Incremental Game</h1>\r\n        </div>\r\n        {inGame ? <GameContainer/> : <MainMenu setInGame={setInGame}/> }\r\n        <br/>\r\n        <DebugView/>\r\n    </div>\r\n\r\n    return (\r\n        <DebugContextProvider inner={inner}/>\r\n    );\r\n}\r\n\r\nexport default AppContainer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport AppContainer from \"./ui/containers/AppContainer\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <AppContainer/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}